
# networks:
#   laravel:

# services:
#   nginx:
#     networks:
#       - laravel
#     # build:
#       # context: .
#       # dockerfile: nginx.dockerfile
#     image: nginx:stable-alpine
#     container_name: nginx
#     ports:
#       - "8088:80"
#     volumes:
#       - ./src:/var/www/html
#       - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#     depends_on: 
#       - php
#       - mysql

#   mysql:
#     networks:
#       - laravel
#     image: mysql:5.7.22
#     container_name: mysql
#     restart: unless-stopped
#     tty: true 
#     ports:
#       - 4306:3306
#     volumes:
#       - ./mysql:/var/lib/mysql

#     environment: 
#       MYSQL_DATABASE: homestead
#       MYSQL_USER: homestead
#       MYSQL_PASSWORD: secret
#       MYSQL_ROOT_PASSWORD: secret
#       SERVICE_TAGS: dev
#       SERVICE_NAME: mysql

#   php:
#     networks:
#       - laravel
#     build:
#       context: .
#       # dockerfile: php.dockerfile
#       dockerfile: Dockerfile
#     container_name: php
#     volumes:
#       - ./src:/var/www/html
#     ports:
#       - "9000:9000"
#   phpmyadmin:
#     image: phpmyadmin
#     restart: always
#     ports:
#       - 8080:80
#     environment:
#       - PMA_ARBITRARY=1

version: '3.8'

services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    ports:
      - 8080:80
    volumes:
      - ./src:/var/www/html
    depends_on: 
      - mysql
      - php

  mysql:
    image: mysql:5.7.22
    container_name: mysql
    ports:
      - 3307:3306
    environment: 
      MYSQL_DATABASE: laravel
      MYSQL_USER: paula
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - ./mysql:/var/lib/mysql

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    volumes:
      - ./src:/var/www/html

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html

  npm:
    image: node:current-alpine
    volumes:
      - ./src:/var/www/html
    entrypoint: ["npm"]
    working_dir: /var/www/html

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on: 
      - mysql
    entrypoint: ["php", "/var/www/html/artisan"]

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    container_name: phpmyadmin
    depends_on:
      - mysql
    ports:
      - 8081:80
    environment: 
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: secret












